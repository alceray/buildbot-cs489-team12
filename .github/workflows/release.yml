# Step 4:

# This step requires the Buildbot git repository to contain buildbot remote that points to https://github.com/buildbot/buildbot and can be pushed to.
# Additionally, the Buildbot docs repository (https://github.com/buildbot/bbdocs) must be checked out at ../bbdocs path.
# Pull the merge commit created on the master branch during the step 2. Then run:
# make release VERSION=x.y.z
# This will create the required tags, make documentation, copy it to bbdocs repo and push everything.

name: Perform Release

on:
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      version:
        description: "Release version x.y.z"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    # This step only needs to run if it's a merged release notes PR or a manual dispatch.
    if: >
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && startsWith(github.event.pull_request.title, 'Release Notes for Version')) 
      || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3
        with:
          repository: alceray/buildbot-cs489-team12
          fetch-depth: 0
          path: buildbot
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
        with:
          repository: alceray/bbdocs
          fetch-depth: 0
          path: bbdocs
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Setup version
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "VERSION=$(echo ${{ github.event.pull_request.title }} | cut -d' ' -f5)" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi
      - name: Install dependencies
        run: |
          cd buildbot
          pip install -U pip setuptools wheel
          pip install -r requirements-ci.txt -r requirements-cidocs.txt
          pip install towncrier virtualenv sphinx
          git config user.name github-actions
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Perform release
        run: |
          make release VERSION=$VERSION
