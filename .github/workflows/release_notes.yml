# Step 2:

# Open a new branch (e.g. release) and run the following:
# . .venv/bin/activate && make release_notes VERSION=x.y.z
# This collects the release notes using the towncrier tool and then commits the result. This step is done as a PR so that CI can check for spelling errors and similar issues. Local checks are insufficient as spelling check in particular depends on what dictionaries are installed.
# It's best to run make docs-release afterwards and check master/docs/_build/html/relnotes/index.html file for obvious rendering errors. This will have much faster turnaround compared to if the error is noticed after the CI runs. If any errors are found, just amend the commit created by make release_notes.
# Certain file names are not properly supported by the towncrier tool and it ignores them. Check newsfragments directory for any forgotten release notes

name: Generate Release Notes

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version x.y.z"
        required: true

jobs:
  release_notes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install -r requirements-ci.txt -r requirements-cidocs.txt
          pip install towncrier virtualenv sphinx
      - name: Generate release notes
        run: |
          git config user.name github-actions 
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          make release_notes VERSION=${{ github.event.inputs.version }}
      - name: Build release docs
        run: |
          make docs-release
      - name: Push changes and create PR
        run: |
          git checkout -b release-notes-${{ github.event.inputs.version }}
          git push origin release-notes-${{ github.event.inputs.version }}
          gh pr create --title "Release Notes for Version ${{ github.event.inputs.version }}" --body "Generated release notes for version ${{ github.event.inputs.version }}" --base master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
